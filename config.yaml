# TLS/SSL Configuration
tls:
  use_tls: false

# Application Configuration
application:
  config: development  # options: development, production, testing, staging
  template_path: "templates/*.html"
  static_path: "./static"

# Server Configuration
server:
  port: 9090
  use_cors: false  # Set this to `true` to enable CORS, `false` to disable

smtp:
  server: smtp.example.com
  port: 587
  username: your-email@example.com
  password: your-email-password
  

# Development Environment Variables
development:
  mongoDB_url: mongodb://localhost:27017/
  cors:
    allowed_origins: http://localhost:3000
    allowed_methods: [GET, POST, PUT, DELETE]
    allowed_headers: [Origin, Content-Type, Authorization]
    exposed_headers: [Content-Length, Content-Range]
    allow_credentials: true
  cert_file: ssl/server.crt
  key_file: ssl/server.pem

# Testing Environment Variables
testing:
  mongoDB_url: postgresql://postgres:postgressGinStructureSecret@localhost:5434/sGinStructure
  cors:
    allowed_origins: http://localhost:3000
    allowed_methods: [GET, POST, PUT, DELETE]
    allowed_headers: [Origin, Content-Type, Authorization]
    exposed_headers: [Content-Length, Content-Range]
    allow_credentials: true
  cert_file: ssl/server.crt
  key_file: ssl/server.pem

# Production Environment Variables
production:
  mongoDB_url: postgresql://postgres:postgressGinStructureSecret@localhost:5434/sGinStructure
  cors:
    allowed_origins: https://myproductionapp.com
    allowed_methods: [GET, POST]
    allowed_headers: [Origin, Content-Type, Authorization]
    exposed_headers: [Content-Length, Content-Range]
    allow_credentials: true
  cert_file: ssl/server.crt
  key_file: ssl/server.pem

# Staging Environment Variables
staging:
  mongoDB_url: postgresql://postgres:postgressGinStructureSecret@localhost:5434/sGinStructure
  cors:
    allowed_origins: https://myproductionapp.com
    allowed_methods: [GET, POST]
    allowed_headers: [Origin, Content-Type, Authorization]
    exposed_headers: [Content-Length, Content-Range]
    allow_credentials: true
  cert_file: ssl/server.crt
  key_file: ssl/server.pem

# Token Configuration
token:
  symmetric_key: qwertyuiopasdfghjklzxcvbnmqwerty
  access_duration: 15m
  use_jwt: true
